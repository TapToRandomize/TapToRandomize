general_options:
  # Where to place output files
  output_path: "/media/fat/Scripts/taptorandomizetmp/"
# Options for MultiServer
# Null means nothing, for the server this means to default the value
# These overwrite command line arguments!
server_options:
  host: null
  port: 38281
  password: null
  multidata: null
  savefile: null
  disable_save: false
  loglevel: "info"
  # Allows for clients to log on and manage the server.  If this is null, no remote administration is possible.
  server_password: null
  # Disallow !getitem
  disable_item_cheat: false
  # Client hint system
  # Points given to a player for each acquired item in their world
  location_check_points: 1
  # Relative point cost to receive a hint via !hint for players
  # so for example hint_cost: 20 would mean that for every 20% of available checks, you get the ability to hint,
  # for a total of 5
  hint_cost: 10
  # Release modes
  # A Release sends out the remaining items *from* a world that releases
  # "disabled" -> clients can't release,
  # "enabled" -> clients can always release
  # "auto" -> automatic release on goal completion
  # "auto-enabled" -> automatic release on goal completion and manual release is also enabled
  # "goal" -> release is allowed after goal completion
  release_mode: "auto"
  # Collect modes
  # A Collect sends the remaining items *to* a world that collects
  # "disabled" -> clients can't collect,
  # "enabled" -> clients can always collect
  # "auto" -> automatic collect on goal completion
  # "auto-enabled" -> automatic collect on goal completion and manual collect is also enabled
  # "goal" -> collect is allowed after goal completion
  collect_mode: "auto"
  # Remaining modes
  # !remaining handling, that tells a client which items remain in their pool
  # "enabled" -> Client can always ask for remaining items
  # "disabled" -> Client can never ask for remaining items
  # "goal" -> Client can ask for remaining items after goal completion
  remaining_mode: "goal"
  # Automatically shut down the server after this many seconds without new location checks, 0 to keep running
  auto_shutdown: 0
  # Compatibility handling
  # 2 -> Recommended for casual/cooperative play, attempt to be compatible with everything across all versions
  # 1 -> No longer in use, kept reserved in case of future use
  # 0 -> Recommended for tournaments to force a level playing field, only allow an exact version match
  compatibility: 2
  # log all server traffic, mostly for dev use
  log_network: 0
# Options for Generation
generator:
  # Location of your Enemizer CLI, available here: https://github.com/Ijwu/Enemizer/releases
  enemizer_path: "EnemizerCLI/EnemizerCLI.Core"
  # Folder from which the player yaml files are pulled from
  player_files_path: "Players"
  # amount of players, 0 to infer from player files
  players: 0
  # general weights file, within the stated player_files_path location
  # gets used if players is higher than the amount of per-player files found to fill remaining slots
  weights_file_path: "weights.yaml"
  # Meta file name, within the stated player_files_path location
  meta_file_path: "meta.yaml"
  # Create a spoiler file
  # 0 -> None
  # 1 -> Spoiler without playthrough or paths to playthrough required items
  # 2 -> Spoiler with playthrough (viable solution to goals)
  # 3 -> Spoiler with playthrough and traversal paths towards items
  spoiler: 3
  # Create encrypted race roms and flag games as race mode
  race: 0
  # List of options that can be plando'd. Can be combined, for example "bosses, items"
  # Available options: bosses, items, texts, connections
  plando_options: "bosses, connections, texts"
  # What to do if the current item placements appear unsolvable.
  # raise -> Raise an exception and abort.
  # swap -> Attempt to fix it by swapping prior placements around. (Default)
  # start_inventory -> Move remaining items to start_inventory, generate additional filler items to fill locations.
  panic_method: "swap"
sni_options:
  # Set this to your SNI folder location if you want the MultiClient to attempt an auto start, does nothing if not found
  sni_path: "SNI"
  # Set this to false to never autostart a rom (such as after patching)
  # True for operating system default program
  # Alternatively, a path to a program to open the .sfc file with
  snes_rom_start: false
bizhawkclient_options:
  # The location of the EmuHawk you want to auto launch patched ROMs with
  emuhawk_path: "None"
  # Set this to true to autostart a patched ROM in BizHawk with the connector script,
  # to false to never open the patched rom automatically,
  # or to a path to an external program to open the ROM file with that instead.
  rom_start: false
adventure_options:
  # File name of the standard NTSC Adventure rom.
  # The licensed "The 80 Classic Games" CD-ROM contains this.
  # It may also have a .a26 extension
  rom_file: "/media/fat/cifs/games/Atari2600/randoroms/Adventure (USA).a26"
  # Set this to false to never autostart a rom (such as after patching)
  # True for operating system default program for '.a26'
  # Alternatively, a path to a program to open the .a26 file with (generally EmuHawk for multiworld)
  rom_start: false
  # Optional, additional args passed into rom_start before the .bin file
  # For example, this can be used to autoload the connector script in BizHawk
  # (see BizHawk --lua= option)
  # Windows example:
  # rom_args: "--lua=C:/ProgramData/Archipelago/data/lua/connector_adventure.lua"
  rom_args: " "
  # Set this to true to display item received messages in EmuHawk
  display_msgs: true
cv64_options:
  # File name of the CV64 US 1.0 rom
  rom_file: "/media/fat/cifs/games/N64/randoroms/cv64.z64"
dkc3_options:
  # File name of the DKC3 US rom
  rom_file: "/media/fat/cifs/games/SNES/randoroms/dkc3.smc"
factorio_options:
  executable: "factorio/bin/x64/factorio"
  # by default, no settings are loaded if this file does not exist. If this file does exist, then it will be used.
  # server_settings: "factorio\\data\\server-settings.json"
  server_settings: null
  # Whether to filter item send messages displayed in-game to only those that involve you.
  filter_item_sends: false
  # Whether to send chat messages from players on the Factorio server to Archipelago.
  bridge_chat_out: true
ffr_options:
  display_msgs: true
kdl3_options:
  # File name of the KDL3 JP or EN rom
  rom_file: "/media/fat/cifs/games/SNES/kdl3.smc"
ladx_options:
  # File name of the Link's Awakening DX rom
  rom_file: "/media/fat/cifs/games/GAMEBOY/randoroms/ladx.gbc"
  # Set this to false to never autostart a rom (such as after patching)
  # true  for operating system default program
  # Alternatively, a path to a program to open the .gbc file with
  # Examples:
  # Retroarch:
  # rom_start: "C:/RetroArch-Win64/retroarch.exe -L sameboy"
  # BizHawk:
  # rom_start: "C:/BizHawk-2.9-win-x64/EmuHawk.exe --lua=data/lua/connector_ladx_bizhawk.lua"
  rom_start: true
lttp_options:
  # File name of the v1.0 J rom
  rom_file: "/media/fat/cifs/games/SNES/randoroms/alttp.smc"
lufia2ac_options:
  # File name of the US rom
  rom_file: "/media/fat/cifs/games/SNES/randoroms/l2.smc"
mlss_options:
  # File name of the MLSS US rom
  rom_file: "/media/fat/cifs/games/GBA/randoroms/mlss.gba"
  rom_start: true
mmbn3_options:
  # File name of the MMBN3 Blue US rom
  rom_file: "/media/fat/cifs/games/GBA/randoroms/mmbn3blue.gba"
  rom_start: true
oot_options:
  # File name of the OoT v1.0 ROM
  rom_file: "/media/fat/cifs/games/N64/randoroms/oot.z64"
  # Set this to false to never autostart a rom (such as after patching),
  # true  for operating system default program
  # Alternatively, a path to a program to open the .z64 file with
  rom_start: true
pokemon_emerald_settings:
  # File name of your English Pokemon Emerald ROM
  rom_file: "/media/fat/cifs/games/GBA/randoroms/pokeemer.gba"
pokemon_rb_options:
  # File names of the Pokemon Red and Blue roms
  red_rom_file: "/media/fat/cifs/games/GAMEBOY/randoroms/pokered.gb"
  blue_rom_file: "/media/fat/cifs/games/GAMEBOY/randoroms/pokeblue.gb"
sm_options:
  # File name of the v1.0 J rom
  rom_file: "/media/fat/cifs/games/SNES/randoroms/sm.smc"
smw_options:
  # File name of the SMW US rom
  rom_file: "/media/fat/cifs/games/SNES/randoroms/smw.smc"
soe_options:
  # File name of the SoE US ROM
  rom_file: "/media/fat/cifs/games/SNES/randoroms/soe.smc"
tloz_options:
  # File name of the Zelda 1
  rom_file: "/media/fat/cifs/games/NES/randoroms/tloz.nes"
  # Set this to false to never autostart a rom (such as after patching)
  # true  for operating system default program
  # Alternatively, a path to a program to open the .nes file with
  rom_start: true
  # Display message inside of Bizhawk
  display_msgs: true
yoshisisland_options:
  # File name of the Yoshi's Island 1.0 US rom
  rom_file: "/media/fat/cifs/games/SNES/randoroms/smw2.smc"
yugioh06_settings:
  # File name of your Yu-Gi-Oh 2006 ROM
  rom_file: "/media/fat/cifs/games/GBA/randoroms/yugioh06.gba"
zillion_options:
  # File name of the Zillion US rom
  rom_file: "/media/fat/cifs/games/SMS/randoroms/zillion.sms"
  # Set this to false to never autostart a rom (such as after patching)
  # True for operating system default program
  # Alternatively, a path to a program to open the .sfc file with
  # RetroArch doesn't make it easy to launch a game from the command line.
  # You have to know the path to the emulator core library on the user's computer.
  rom_start: false
